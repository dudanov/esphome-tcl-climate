# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # #                                   НЕ РЕДАКТИРОВАТЬ!!                                  # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Компонент климата
external_components:
  - source:
      url: https://github.com/dudanov/esphome-tcl-climate.git
      type: git
      ref: dev
    components: [tcl]
    refresh: 30s

# Конфигурация ESPHome
esphome:
  name: ${device_name}
  min_version: 2023.3.0
  friendly_name: ${humanly_name}
  on_boot:
    priority: -100
    then:
      lambda: !lambda |-
        if (id(vswing).active_index() == 0){
          id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::UP_DOWN);
        } else if (id(vswing).active_index() == 1){
          id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::UPSIDE);
        } else if (id(vswing).active_index() == 2){
          id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::DOWNSIDE);
        }

        if (id(hswing).active_index() == 0){
          id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::LEFT_RIGHT);
        } else if (id(hswing).active_index() == 1){
          id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::LEFTSIDE);
        } else if (id(hswing).active_index() == 2){
          id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::CENTER);
        } else if (id(hswing).active_index() == 3){
          id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::RIGHTSIDE);
        }

        if (id(vfixing).active_index() == 0){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_LAST);
        } else if (id(vfixing).active_index() == 1){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_MAX_UP);
        } else if (id(vfixing).active_index() == 2){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_UP);
        } else if (id(vfixing).active_index() == 3){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_CENTER);
        } else if (id(vfixing).active_index() == 4){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_DOWN);
        } else if (id(vfixing).active_index() == 5){
          id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::AFV_MAX_DOWN);
        }

        if (id(hfixing).active_index() == 0){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::LAST);
        } else if (id(hfixing).active_index() == 1){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::MAX_LEFT);
        } else if (id(hfixing).active_index() == 2){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::LEFT);
        } else if (id(hfixing).active_index() == 3){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::CENTER);
        } else if (id(hfixing).active_index() == 4){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::RIGHT);
        } else if (id(hfixing).active_index() == 5){
          id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::MAX_RIGHT);
        }

uart:
  baud_rate: 9600
  data_bits: 8
  parity: EVEN
  stop_bits: 1
  rx_pin: ${uart_rx}
  tx_pin: ${uart_tx}

api:
  encryption:
    key: "${api_key}"

ota:
  - platform: esphome
    password: "${ota_pass}"

wifi:
  id: "${device_name}_wifi"
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "${device_name} Fallback Hotspot"
    password: "${recovery_pass}"

captive_portal:

# # # # # # # # # # # # # # # # # # # # # # #
# # # # #     НЕ РЕДАКТИРОВАТЬ!     # # # # #
# # # # # # # # # # # # # # # # # # # # # # #

# ОБЯЗАТЕЛЬНО отключаем логгирование через UART
logger:
  baud_rate: 0

# Раздел настроек устройства:
# - Выпадающие списки
select:
  # Настройка вертикального качания
  - platform: template
    name: Vertical swing
    id: vswing
    entity_category: config
    options:
      - "Сверху вниз"
      - "В верхней половине"
      - "В нижней половине"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(vswing).active_index() == 0){
            id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::UP_DOWN);
          } else if (id(vswing).active_index() == 1){
            id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::UPSIDE);
          } else if (id(vswing).active_index() == 2){
            id(${device_name}).set_vertical_swing_direction(esphome::tcl::VerticalSwingDirection::DOWNSIDE);
          }

  # Настройка горизонтального качания
  - platform: template
    name: Horizontal swing
    id: hswing
    entity_category: config
    options:
      - "Слева направо"
      - "В левой части"
      - "В центре"
      - "В правой части"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(hswing).active_index() == 0){
            id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::LEFT_RIGHT);
          } else if (id(hswing).active_index() == 1){
            id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::LEFTSIDE);
          } else if (id(hswing).active_index() == 2){
            id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::CENTER);
          } else if (id(hswing).active_index() == 3){
            id(${device_name}).set_horizontal_swing_direction(esphome::tcl::HorizontalSwingDirection::RIGHTSIDE);
          }

  # Настройка фиксации вертикальной заслонки
  - platform: template
    name: Vertical fixing
    id: vfixing
    entity_category: config
    options:
      - "Последнее положение"
      - "До упора вверх"
      - "В верхней половине"
      - "По середине"
      - "В нижней половине"
      - "До упора вниз"
    optimistic: true
    restore_value: true
    on_value:
      then:
        tcl.set_vertical_airflow: !lambda "return static_cast<esphome::tcl::AirflowVerticalDirection>(i);"
  #        lambda: !lambda |-
  #          if (id(vfixing).active_index() == 0){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::LAST);
  #          } else if (id(vfixing).active_index() == 1){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::MAX_UP);
  #          } else if (id(vfixing).active_index() == 2){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::UP);
  #          } else if (id(vfixing).active_index() == 3){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::CENTER);
  #          } else if (id(vfixing).active_index() == 4){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::DOWN);
  #          } else if (id(vfixing).active_index() == 5){
  #            id(${device_name}).set_vertical_airflow(esphome::tcl::AirflowVerticalDirection::MAX_DOWN);
  #          }

  # Настройка фиксации горизонатальных заслонок
  - platform: template
    name: Horizontal fixing
    id: hfixing
    entity_category: config
    options:
      - "Последнее положение"
      - "До упора влево"
      - "В левой половине"
      - "По середине"
      - "В правой половине"
      - "До упора вправо"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(hfixing).active_index() == 0){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::LAST);
          } else if (id(hfixing).active_index() == 1){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::MAX_LEFT);
          } else if (id(hfixing).active_index() == 2){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::LEFT);
          } else if (id(hfixing).active_index() == 3){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::CENTER);
          } else if (id(hfixing).active_index() == 4){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::RIGHT);
          } else if (id(hfixing).active_index() == 5){
            id(${device_name}).set_horizontal_airflow(esphome::tcl::AirflowHorizontalDirection::MAX_RIGHT);
          }

climate:
  - platform: tcl
    name: None
    id: ${device_name}
    # Пищалка для подтверждения команд, по умолчанию выключена
    beeper: true
    # Индикатор уставки температуры на корпусе внутреннего блока, по умолчанию включен
    display: true
